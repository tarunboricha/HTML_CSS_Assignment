SELECT U.UserName, U.ProfilePicURL, S.MediaUrl FROM Story AS S INNER JOIN Users AS U ON S.UserName = U.UserName;


public class StoryService
{
    private readonly AppDbContext _context;

    public StoryService(AppDbContext context)
    {
        _context = context;
    }

    public async Task<IEnumerable<StoryWithUserDto>> GetStoriesWithUsersAsync()
    {
        var result = await (from s in _context.Stories
                            join u in _context.Users
                            on s.UserName equals u.UserName
                            select new StoryWithUserDto
                            {
                                UserName = u.UserName,
                                ProfilePicURL = u.ProfilePicURL,
                                MediaUrl = s.MediaUrl
                            }).ToListAsync();

        return result;
    }
}

<nav class="d-flex flex-column align-items-center vh-100 p-3 border-end" style="width: 250px;">
  <a href="#" class="text-dark text-decoration-none mb-5">
    <h1 class="h5">BrandName</h1>
  </a>
  <ul class="nav nav-pills flex-column mb-auto w-100">
    <li class="nav-item">
      <a href="#" class="nav-link text-dark">
        <i class="bi bi-house-door-fill"></i> Home
      </a>
    </li>
    <li class="nav-item">
      <a href="#" class="nav-link text-dark">
        <i class="bi bi-compass"></i> Explore
      </a>
    </li>
    <li class="nav-item">
      <a href="#" class="nav-link text-dark">
        <i class="bi bi-chat-dots-fill"></i> Messages
      </a>
    </li>
    <li class="nav-item">
      <a href="#" class="nav-link text-dark">
        <i class="bi bi-bell-fill"></i> Notifications
      </a>
    </li>
    <li class="nav-item">
      <a href="#" class="nav-link text-dark">
        <i class="bi bi-plus-square-fill"></i> Create
      </a>
    </li>
  </ul>
  <hr class="w-100">
  <div class="dropdown mt-auto">
    <a href="#" class="d-flex align-items-center text-dark text-decoration-none dropdown-toggle" id="dropdownUser1" data-bs-toggle="dropdown" aria-expanded="false">
      <img src="https://via.placeholder.com/30" alt="" width="30" height="30" class="rounded-circle me-2">
      <strong>Profile</strong>
    </a>
    <ul class="dropdown-menu dropdown-menu-dark text-small shadow" aria-labelledby="dropdownUser1">
      <li><a class="dropdown-item" href="#">Settings</a></li>
      <li><a class="dropdown-item" href="#">Log out</a></li>
    </ul>
  </div>
</nav>



nav {
  background-color: #fff;
}

nav a.nav-link {
  font-size: 1.1rem;
  padding: 10px 15px;
  transition: background-color 0.3s, color 0.3s;
}

nav a.nav-link:hover {
  background-color: #f0f0f0;
  color: #000;
}

nav a.nav-link i {
  margin-right: 10px;
}

nav a.text-dark:hover {
  color: #000;
}

hr {
  border: 0;
  border-top: 1px solid #eaeaea;
}



<div class="story-container d-flex flex-column align-items-center p-3">
  <div class="story-header w-100 d-flex align-items-center justify-content-between mb-4">
    <h2 class="h5">Stories</h2>
    <a href="#" class="text-dark">Watch All</a>
  </div>
  <div class="story-items d-flex w-100 overflow-auto">
    <div class="story-item me-3">
      <div class="story-img-wrapper">
        <img src="https://via.placeholder.com/80" class="rounded-circle story-img" alt="Story">
      </div>
      <p class="text-center mt-2">Username</p>
    </div>
    <!-- Repeat the above story-item div for multiple stories -->
    <div class="story-item me-3">
      <div class="story-img-wrapper">
        <img src="https://via.placeholder.com/80" class="rounded-circle story-img" alt="Story">
      </div>
      <p class="text-center mt-2">Username</p>
    </div>
  </div>
</div>



.story-container {
  background-color: #fff;
  border: 1px solid #eaeaea;
  border-radius: 8px;
  padding: 20px;
}

.story-header {
  border-bottom: 1px solid #eaeaea;
  padding-bottom: 10px;
}

.story-items {
  padding-top: 10px;
  padding-bottom: 10px;
}

.story-item {
  display: flex;
  flex-direction: column;
  align-items: center;
}

.story-img-wrapper {
  width: 80px;
  height: 80px;
  padding: 2px;
  border: 2px solid #d63384;
  border-radius: 50%;
}

.story-img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  border-radius: 50%;
}

.story-item p {
  font-size: 0.9rem;
  color: #333;
}





<div class="story-container d-flex flex-column align-items-center p-3">
  <div class="story-header w-100 d-flex align-items-center justify-content-between mb-4">
    <h2 class="h5">Stories</h2>
    <a href="#" class="text-dark">Watch All</a>
  </div>
  <div class="story-items d-flex w-100 overflow-auto">
    <div class="story-item me-3" *ngFor="let story of stories; let i = index" (click)="openStory(i)">
      <div class="story-img-wrapper">
        <img [src]="story.img" class="rounded-circle story-img" alt="Story">
      </div>
      <p class="text-center mt-2">{{ story.username }}</p>
    </div>
  </div>

  <!-- Modal -->
  <div class="modal fade" id="storyModal" tabindex="-1" aria-labelledby="storyModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="storyModalLabel">{{ stories[currentStoryIndex]?.username }}</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body text-center">
          <img [src]="stories[currentStoryIndex]?.img" class="img-fluid" alt="Story Image">
        </div>
        <div class="modal-footer d-flex justify-content-between">
          <button type="button" class="btn btn-secondary" (click)="prevStory()">Previous</button>
          <button type="button" class="btn btn-primary" (click)="nextStory()">Next</button>
        </div>
      </div>
    </div>
  </div>
</div>





.story-container {
  background-color: #fff;
  border: 1px solid #eaeaea;
  border-radius: 8px;
  padding: 20px;
}

.story-header {
  border-bottom: 1px solid #eaeaea;
  padding-bottom: 10px;
}

.story-items {
  padding-top: 10px;
  padding-bottom: 10px;
}

.story-item {
  display: flex;
  flex-direction: column;
  align-items: center;
  cursor: pointer;
}

.story-img-wrapper {
  width: 80px;
  height: 80px;
  padding: 2px;
  border: 2px solid #d63384;
  border-radius: 50%;
}

.story-img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  border-radius: 50%;
}

.story-item p {
  font-size: 0.9rem;
  color: #333;
}

.modal-content {
  border-radius: 10px;
}





import { Component } from '@angular/core';

@Component({
  selector: 'app-story',
  templateUrl: './story.component.html',
  styleUrls: ['./story.component.css']
})
export class StoryComponent {
  stories = [
    { img: 'https://via.placeholder.com/80', username: 'User1' },
    { img: 'https://via.placeholder.com/80', username: 'User2' },
    { img: 'https://via.placeholder.com/80', username: 'User3' },
    { img: 'https://via.placeholder.com/80', username: 'User4' },
  ];
  
  currentStoryIndex: number = 0;

  openStory(index: number) {
    this.currentStoryIndex = index;
    const storyModal = new window.bootstrap.Modal(document.getElementById('storyModal'));
    storyModal.show();
  }

  prevStory() {
    if (this.currentStoryIndex > 0) {
      this.currentStoryIndex--;
    }
  }

  nextStory() {
    if (this.currentStoryIndex < this.stories.length - 1) {
      this.currentStoryIndex++;
    }
  }
}




<div class="feed-container p-3">
  <div class="feed-post mb-4" *ngFor="let post of posts">
    <div class="post-header d-flex align-items-center mb-3">
      <img [src]="post.userImg" class="rounded-circle post-user-img" alt="User Image">
      <div class="ms-3">
        <h5 class="mb-0">{{ post.username }}</h5>
        <small class="text-muted">{{ post.timestamp | date: 'short' }}</small>
      </div>
    </div>
    <div class="post-image mb-3">
      <img [src]="post.postImg" class="img-fluid rounded" alt="Post Image">
    </div>
    <div class="post-content">
      <p>{{ post.content }}</p>
    </div>
    <div class="post-actions d-flex justify-content-between mt-3">
      <button class="btn btn-outline-primary">
        <i class="bi bi-heart"></i> Like
      </button>
      <button class="btn btn-outline-secondary">
        <i class="bi bi-chat"></i> Comment
      </button>
      <button class="btn btn-outline-success">
        <i class="bi bi-share"></i> Share
      </button>
    </div>
  </div>
</div>



.feed-container {
  background-color: #fff;
  border: 1px solid #eaeaea;
  border-radius: 8px;
  padding: 20px;
}

.feed-post {
  border-bottom: 1px solid #eaeaea;
  padding-bottom: 20px;
}

.feed-post:last-child {
  border-bottom: none;
}

.post-header {
  align-items: center;
}

.post-user-img {
  width: 50px;
  height: 50px;
  object-fit: cover;
  border-radius: 50%;
}

.post-image img {
  width: 100%;
  height: auto;
  border-radius: 8px;
}

.post-content {
  margin-top: 15px;
}

.post-actions button {
  display: flex;
  align-items: center;
  gap: 5px;
}

.post-actions i {
  font-size: 1.2rem;
}


import { Component } from '@angular/core';

@Component({
  selector: 'app-feed',
  templateUrl: './feed.component.html',
  styleUrls: ['./feed.component.css']
})
export class FeedComponent {
  posts = [
    {
      userImg: 'https://via.placeholder.com/50',
      username: 'User1',
      timestamp: new Date(),
      postImg: 'https://via.placeholder.com/600x400',
      content: 'This is a sample post content from User1.'
    },
    {
      userImg: 'https://via.placeholder.com/50',
      username: 'User2',
      timestamp: new Date(),
      postImg: 'https://via.placeholder.com/600x400',
      content: 'This is a sample post content from User2.'
    },
    {
      userImg: 'https://via.placeholder.com/50',
      username: 'User3',
      timestamp: new Date(),
      postImg: 'https://via.placeholder.com/600x400',
      content: 'This is a sample post content from User3.'
    }
  ];
}
